// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Video_Library_Api.Contexts;

namespace Video_Library_Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190911080349_AddUserAddedFieldInTag")]
    partial class AddUserAddedFieldInTag
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:postgis", "'postgis', '', ''")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.Tags_Id_sequence", "'Tags_Id_sequence', '', '81', '1', '', '', 'Int32', 'False'");

            modelBuilder.Entity("Video_Library_Api.Models.RelatedVideos", b =>
                {
                    b.Property<string>("Video1Id");

                    b.Property<string>("Video2Id");

                    b.Property<int>("Length");

                    b.Property<int>("Offset1");

                    b.Property<int>("Offset2");

                    b.Property<float>("Score");

                    b.HasKey("Video1Id", "Video2Id");

                    b.HasIndex("Video2Id");

                    b.ToTable("RelatedVideos");
                });

            modelBuilder.Entity("Video_Library_Api.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("nextval('\"Tags_Id_sequence\"')");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("UserAdded")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Video_Library_Api.Models.Video", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16);

                    b.Property<long?>("BitRate");

                    b.Property<string>("CodecName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("CreationTime");

                    b.Property<double?>("Duration");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("FormatLongName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int?>("Height");

                    b.Property<long?>("Size");

                    b.Property<string>("StreamsJSON")
                        .IsRequired()
                        .HasMaxLength(4096);

                    b.Property<DateTime?>("UploadTime")
                        .IsRequired();

                    b.Property<int?>("Width");

                    b.HasKey("Id");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Video_Library_Api.Models.VideoGeolocation", b =>
                {
                    b.Property<string>("VideoId")
                        .HasMaxLength(16);

                    b.Property<LineString>("CameraLine")
                        .HasColumnType("geography");

                    b.Property<Polygon>("FilmedArea")
                        .HasColumnType("geography");

                    b.HasKey("VideoId");

                    b.ToTable("VideoGeolocation");
                });

            modelBuilder.Entity("Video_Library_Api.Models.VideosTags", b =>
                {
                    b.Property<string>("VideoId");

                    b.Property<int>("TagId");

                    b.Property<int>("From");

                    b.Property<int>("To");

                    b.HasKey("VideoId", "TagId", "From", "To");

                    b.HasIndex("TagId");

                    b.ToTable("VideosTags");
                });

            modelBuilder.Entity("Video_Library_Api.Models.RelatedVideos", b =>
                {
                    b.HasOne("Video_Library_Api.Models.Video", "Video1")
                        .WithMany("RelatedFromVideos")
                        .HasForeignKey("Video1Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Video_Library_Api.Models.Video", "Video2")
                        .WithMany("RelatedToVideos")
                        .HasForeignKey("Video2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Video_Library_Api.Models.VideoGeolocation", b =>
                {
                    b.HasOne("Video_Library_Api.Models.Video", "Video")
                        .WithOne("VideoGeolocation")
                        .HasForeignKey("Video_Library_Api.Models.VideoGeolocation", "VideoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Video_Library_Api.Models.VideosTags", b =>
                {
                    b.HasOne("Video_Library_Api.Models.Tag", "Tag")
                        .WithMany("VideosTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Video_Library_Api.Models.Video", "Video")
                        .WithMany("VideosTags")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
